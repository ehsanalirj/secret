openapi: 3.0.3
info:
  title: Vontres Online Ordering API
  description: |
    This is the OpenAPI specification for the Vontres Online Ordering Ecosystem.
    All endpoints are multi-tenant, RBAC-protected, and audit-logged. Data residency, compliance, and extensibility are built-in.
    
    **Authentication:**
      - Bearer JWT tokens for users
      - x-api-key header for integrations
    
    **RBAC:**
      - Role-based access (admin, manager, user, etc.)
    
    **Compliance:**
      - All destructive actions require complianceStatus: approved
      - Audit logs are available for all sensitive actions
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /user:
    get:
      summary: Get all users for a tenant
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of users
    post:
      summary: Invite a new user
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: User invited
  /billing:
    get:
      summary: Get all billing records for a tenant
      tags: [Billing]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of billing records
    post:
      summary: Create a billing record
      tags: [Billing]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Billing record created
  /analytics:
    get:
      summary: Get all analytics for a tenant
      tags: [Analytics]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of analytics records
    post:
      summary: Create analytics data
      tags: [Analytics]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Analytics record created
  /menu:
    get:
      summary: Get all menus for a tenant
      tags: [Menu]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of menus
    post:
      summary: Create a menu
      tags: [Menu]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Menu created
  /order:
    get:
      summary: Get all orders for a tenant
      tags: [Order]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of orders
    post:
      summary: Create an order
      tags: [Order]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Order created
  /crm:
    get:
      summary: Get all CRM records for a tenant
      tags: [CRM]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of CRM records
    post:
      summary: Create a CRM record
      tags: [CRM]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: CRM record created
  /notification:
    get:
      summary: Get all notifications for a tenant
      tags: [Notification]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of notifications
    post:
      summary: Create a notification
      tags: [Notification]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Notification created
  /integration:
    get:
      summary: Get all integrations for a tenant
      tags: [Integration]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of integrations
    post:
      summary: Create an integration
      tags: [Integration]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Integration created
  /setting:
    get:
      summary: Get all settings for a tenant
      tags: [Setting]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of settings
    post:
      summary: Create or update a setting
      tags: [Setting]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Setting created or updated
  /webhook:
    get:
      summary: Get all webhooks for a tenant
      tags: [Webhook]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of webhooks
    post:
      summary: Create a webhook
      tags: [Webhook]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Webhook created
  /health:
    get:
      summary: Health check
      tags: [Health]
      responses:
        '200':
          description: Health status
  /search:
    get:
      summary: Global search across all entities
      tags: [Search]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Search results
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
  apiKey:
    type: apiKey
    in: header
    name: x-api-key
